name: Deploy to production server

permissions:
  contents: read

on:
  workflow_run:
    workflows: ["Build and push docker image"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v4

      - name: Copy compose file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          source: "compose.yaml"
          target: "/home/${{ secrets.PROD_USERNAME }}/${{ github.event.repository.name }}/"

      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            export COMPOSE_PATH="/home/${{ secrets.PROD_USERNAME }}/${{ github.event.repository.name }}/compose.yaml"
            # Create docker config directory if it doesn't exist
            mkdir -p ~/.docker
            # Login using docker config to avoid token in shell history
            echo '{ "auths": { "ghcr.io": { "auth": "${{ secrets.GITHUB_TOKEN }}" } } }' > ~/.docker/config.json
            docker compose -f $COMPOSE_PATH pull
            docker compose -f $COMPOSE_PATH down
            docker compose -f $COMPOSE_PATH up -d
            # Remove the config file after we're done
            rm ~/.docker/config.json
